"""add hierarchical scope fields to rules, proposals, rule_versions

Revision ID: d912b78b75b4
Revises: d010368583a5
Create Date: 2025-05-21 00:54:25.770019

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision: str = 'd912b78b75b4'
down_revision: Union[str, None] = 'd010368583a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    bind = op.get_bind()
    inspector = inspect(bind)
    
    # Helper function to check if column exists
    def column_exists(table_name: str, column_name: str) -> bool:
        if table_name not in inspector.get_table_names():
            return False
        columns = [col['name'] for col in inspector.get_columns(table_name)]
        return column_name in columns
    
    # Helper function to check if index exists
    def index_exists(table_name: str, index_name: str) -> bool:
        if table_name not in inspector.get_table_names():
            return False
        indexes = [idx['name'] for idx in inspector.get_indexes(table_name)]
        return index_name in indexes
    
    # Add columns to proposals table if they don't exist
    if not column_exists('proposals', 'scope_level'):
        op.add_column('proposals', sa.Column('scope_level', sa.String(), nullable=False, server_default='global'))
    if not column_exists('proposals', 'scope_id'):
        op.add_column('proposals', sa.Column('scope_id', sa.String(), nullable=True))
    if not column_exists('proposals', 'parent_rule_id'):
        op.add_column('proposals', sa.Column('parent_rule_id', sa.String(), nullable=True))
    
    # Create indexes for proposals if they don't exist
    if not index_exists('proposals', 'ix_proposals_scope_id'):
        op.create_index(op.f('ix_proposals_scope_id'), 'proposals', ['scope_id'], unique=False)
    if not index_exists('proposals', 'ix_proposals_scope_level'):
        op.create_index(op.f('ix_proposals_scope_level'), 'proposals', ['scope_level'], unique=False)
    
    # Add columns to rule_versions table if they don't exist
    if not column_exists('rule_versions', 'scope_level'):
        op.add_column('rule_versions', sa.Column('scope_level', sa.String(), nullable=False, server_default='global'))
    if not column_exists('rule_versions', 'scope_id'):
        op.add_column('rule_versions', sa.Column('scope_id', sa.String(), nullable=True))
    if not column_exists('rule_versions', 'parent_rule_id'):
        op.add_column('rule_versions', sa.Column('parent_rule_id', sa.String(), nullable=True))
    
    # Create indexes for rule_versions if they don't exist
    if not index_exists('rule_versions', 'ix_rule_versions_scope_id'):
        op.create_index(op.f('ix_rule_versions_scope_id'), 'rule_versions', ['scope_id'], unique=False)
    if not index_exists('rule_versions', 'ix_rule_versions_scope_level'):
        op.create_index(op.f('ix_rule_versions_scope_level'), 'rule_versions', ['scope_level'], unique=False)
    
    # Add columns to rules table if they don't exist
    if not column_exists('rules', 'scope_level'):
        op.add_column('rules', sa.Column('scope_level', sa.String(), nullable=False, server_default='global'))
    if not column_exists('rules', 'scope_id'):
        op.add_column('rules', sa.Column('scope_id', sa.String(), nullable=True))
    if not column_exists('rules', 'parent_rule_id'):
        op.add_column('rules', sa.Column('parent_rule_id', sa.String(), nullable=True))
    
    # Create indexes for rules if they don't exist
    if not index_exists('rules', 'ix_rules_scope_id'):
        op.create_index(op.f('ix_rules_scope_id'), 'rules', ['scope_id'], unique=False)
    if not index_exists('rules', 'ix_rules_scope_level'):
        op.create_index(op.f('ix_rules_scope_level'), 'rules', ['scope_level'], unique=False)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rules_scope_level'), table_name='rules')
    op.drop_index(op.f('ix_rules_scope_id'), table_name='rules')
    op.drop_column('rules', 'parent_rule_id')
    op.drop_column('rules', 'scope_id')
    op.drop_column('rules', 'scope_level')
    op.drop_index(op.f('ix_rule_versions_scope_level'), table_name='rule_versions')
    op.drop_index(op.f('ix_rule_versions_scope_id'), table_name='rule_versions')
    op.drop_column('rule_versions', 'parent_rule_id')
    op.drop_column('rule_versions', 'scope_id')
    op.drop_column('rule_versions', 'scope_level')
    op.drop_index(op.f('ix_proposals_scope_level'), table_name='proposals')
    op.drop_index(op.f('ix_proposals_scope_id'), table_name='proposals')
    op.drop_column('proposals', 'parent_rule_id')
    op.drop_column('proposals', 'scope_id')
    op.drop_column('proposals', 'scope_level')
    # ### end Alembic commands ###
