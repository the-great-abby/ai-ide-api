"""add rule_proposal_feedback table

Revision ID: c77f4c2517b0
Revises: c0f38afa30e4
Create Date: 2025-05-14 14:05:04.815662

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c77f4c2517b0'
down_revision: Union[str, None] = 'c0f38afa30e4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rule_proposal_feedback',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('rule_proposal_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('feedback_type', sa.Enum('accept', 'reject', 'needs_changes', name='feedbacktype'), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rule_proposal_feedback_id'), 'rule_proposal_feedback', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rule_proposal_feedback_id'), table_name='rule_proposal_feedback')
    op.drop_table('rule_proposal_feedback')
    # ### end Alembic commands ###
