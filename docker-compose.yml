version: "3.8"
services:
  api:
    build: .
    # Use the PORT env var if set, otherwise default to 9103
    ports:
      - "${PORT:-9103}:8000"
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - POSTGRES_DB=rulesdb
      - DATABASE_URL=postgresql://postgres:postgres@db-test:5432/rulesdb
      - OLLAMA_FUNCTIONS_URL=http://ollama-functions:8000
      - CORS_ORIGINS=*  # Allow all origins for debugging; restrict in production!
    depends_on:
      - db-test
    command: ["uvicorn", "rule_api_server:app", "--host", "0.0.0.0", "--reload"]

  test:
    build: .
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - ENVIRONMENT=test
    command: ["pytest", "test_rule_api_server.py"]

  coverage:
    build: .
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    command: ["pytest", "--cov=rule_api_server", "--cov-report=term-missing", "test_rule_api_server.py"]

  frontend:
    build:
      context: ./admin-frontend
      args:
        VITE_API_BASE_URL: "http://localhost:${PORT:-9103}"
    ports:
      - "${ADMIN_FRONTEND_PORT:-3000}:80"
    depends_on:
      - api
    environment:
      - VITE_API_BASE_URL=http://localhost:${PORT:-9103}

  # Playwright service for UI testing (CI/CD friendly)
  playwright:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile.playwright
    working_dir: /app
    depends_on:
      - frontend
    command: ["npx", "playwright", "test"]
    environment:
      - CI=true
    # No volume mount: tests the built image, not local code

  db-test:
    build:
      context: .
      dockerfile: Dockerfile.pgvector
    environment:
      POSTGRES_DB: rulesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - rules_postgres_data:/var/lib/postgresql/data
      - ./docker/initdb:/docker-entrypoint-initdb.d

  misc-scripts:
    build:
      context: .
      dockerfile: Dockerfile.misc-scripts
    volumes:
      - ./misc_scripts:/scripts
      - ./.cursor/rules:/app/.cursor/rules
      - ./ai_ide_rules:/app/ai_ide_rules
      - .:/code
    working_dir: /scripts
    depends_on:
      - api
    environment:
      - RUNNING_IN_DOCKER=1
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGHOST=db-test
      - PGPORT=5432
      - MEMORY_API_URL=http://api:8000/memory/nodes
      - OLLAMA_URL=http://host.docker.internal:11434/api/generate
      - OLLAMA_MODEL=llama3.1:8b-instruct-q6_K
    command: tail -f /dev/null

  ollama-functions:
    build:
      context: .
      dockerfile: Dockerfile.ollama_functions
    ports:
      - "9104:8000"
    environment:
      - OLLAMA_URL=${OLLAMA_URL:-http://host.docker.internal:11434/api/generate}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3:8b}
    depends_on:
      - api
    volumes:
      - .:/code

volumes:
  rules_postgres_data: 