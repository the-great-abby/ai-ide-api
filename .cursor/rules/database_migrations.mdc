
{section}
----------------
(Add content for this section.)

# Database Migration Execution Guidelines

- **Core Requirements**
  - **Execution Environment**
    - All Alembic migration commands MUST be run via the API Docker container using Makefile.ai targets
    - Never run Alembic or database migrations directly on your local machine
    - Use the provided Makefile.ai targets for consistency and safety

  - **Correct Usage Examples:**
    ```bash
    # ✅ Correct: Using Makefile.ai targets (runs inside Docker)
    make -f Makefile.ai ai-db-migration-new NAME="add_some_feature"
    make -f Makefile.ai ai-db-upgrade
    make -f Makefile.ai ai-db-history
    ```
    
    # ❌ Incorrect: Running Alembic locally
    alembic revision --autogenerate -m "add_some_feature"
    alembic upgrade head
    
  - **Best Practices**
    - ✅ DO: Use Makefile.ai targets for all migration and schema operations
    - ✅ DO: Run migrations in the same environment as the API (Docker container)
    - ✅ DO: Document all schema changes in PRs and user stories
    - ❌ DON'T: Run Alembic or database migrations directly on your host machine
    - ❌ DON'T: Edit migration files manually unless necessary for conflict resolution
    - ❌ DON'T: Skip Makefile targets for migrations

- **Common Issues**
  - **Migration Failures**
    - Symptom: "ModuleNotFoundError: No module named 'psycopg2'" or similar
    - Cause: Running Alembic outside the Docker environment
    - Solution: Always use Makefile.ai targets

  - **Schema Drift**
    - Symptom: Database schema does not match models
    - Cause: Migrations not run in the correct environment
    - Solution: Use Makefile.ai targets and verify with `ai-db-history`

- **References**
  - [pytest_execution.mdc](pytest_execution.mdc) for analogous test execution rules
  - [Makefile.ai](../../Makefile.ai) for available migration targets
  - [environments.mdc](environments.mdc) for environment configuration

# Migration Workflow

1. Update your SQLAlchemy models in `db.py` (or relevant model files)
2. Generate a migration:
   ```bash
   make -f Makefile.ai ai-db-migration-new NAME="add_some_feature"
   ```
3. Apply the migration:
   ```bash
   make -f Makefile.ai ai-db-upgrade
   ```
4. Verify schema and document changes

# Warning
**Never run Alembic or database migrations directly on your local machine. Always use the provided Makefile.ai targets to ensure migrations run in the correct Docker environment.** 