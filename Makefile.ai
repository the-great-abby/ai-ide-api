PORT ?= 9103
ADMIN_FRONTEND_PORT ?= 3000
API_PORT ?= 9103
MEMORYDB_FILE ?= not_provided
RULESDB_FILE ?= not_provided
BACKUP_FILE ?= not_provided

# TODO: Implement a script for interactive Alembic head-checking and prompting for merges.
# This will help users resolve migration graph conflicts more safely and with better UX.

# Add this near the top with other variable definitions
# OLLAMA_MODEL ?= llama3.1:70b-instruct-q5_K_M
OLLAMA_MODEL ?= llama3.1:8b-instruct-q6_K

PROJECT ?= ai-ide-api

include Makefile.ai-test
include Makefile.ai-llm
include Makefile.ai-misc
include Makefile.ai-db
include Makefile.ai-admin
include Makefile.ai-memory

# --- Core Targets ---
ai-up:
	docker-compose up -d api frontend
	$(MAKE) -f Makefile.ai ai-api-wait

ai-down:
	docker-compose down

api-up:
	docker compose up -d api db-test

ai-test:
	docker-compose run --rm test pytest tests/ --disable-warnings --tb=short

ai-test-json:
	docker-compose run --rm test pytest --json-report --json-report-file=pytest-report.json tests/

ai-test-one:
	docker-compose run --rm test pytest $(TEST) --disable-warnings --tb=short

ai-env:
	curl -s http://localhost:$(PORT)/env || echo '{"error": "API not running"}'

ai-status:
	docker-compose ps

# --- Database and Migration Targets ---
ai-api-wait:
	@echo "Waiting for API to be ready..."
	@until curl -sf http://localhost:$(API_PORT)/env > /dev/null; do sleep 2; done
	@echo "API is up!"

# --- Enhancement and Bug Report Targets ---
ai-list-bug-reports:
	curl -s http://localhost:$(PORT)/bug-reports | jq '.'

# --- Logs and Admin Targets ---
logs:
	docker compose logs --tail=100 api db-test frontend || docker-compose logs --tail=100 api db-test frontend

logs-api:
	docker compose logs --tail=100 api || docker-compose logs --tail=100 api

logs-db:
	docker compose logs --tail=100 db-test || docker-compose logs --tail=100 db-test

logs-frontend:
	docker compose logs --tail=100 frontend || docker-compose logs --tail=100 frontend

open-docs:
	open http://localhost:$(PORT)/docs

open-admin:
	open http://localhost:$(ADMIN_FRONTEND_PORT)

ai-build:
	docker-compose build

# --- Restart and Utility Targets ---
ai-api-restart-wait:
	docker compose restart api
	$(MAKE) -f Makefile.ai ai-api-wait

ai-restart-all:
	$(MAKE) -f Makefile.ai ai-api-restart-wait
	$(MAKE) -f Makefile.ai ai-restart-ollama-functions
	$(MAKE) -f Makefile.ai ai-ollama-restart-docker-gateway-bg
	$(MAKE) -f Makefile.ai ai-admin-frontend-restart
	$(MAKE) -f Makefile.ai ai-misc-restart
	@echo "[ai-restart-all] All core services (API, Ollama functions, frontend, misc-scripts) have been restarted."

# --- MemoryDB and Misc Targets ---
ai-memorydb-migrate:
	docker compose exec api alembic -c alembic_memorydb.ini upgrade head

ai-memory-search-embedding:
	curl -X POST http://localhost:9103/memory/nodes/search \
	  -H "Content-Type: application/json" \
	  -d '{"embedding": $(EMBEDDING), "namespace": "$(NAMESPACE)", "limit": $(LIMIT)}'

# --- Memory Graph Operations ---









# --- End of Deduplicated Makefile.ai ---

submit-rule:
	@echo "Submitting rule proposal from file: $(FILE)"
	curl -X POST http://localhost:9103/propose-rule-change -H 'Content-Type: application/json' --data @$(FILE)

update-project-map:
	docker compose exec misc-scripts python3 /code/scripts/update_project_map.py

# --- Meta-targets for LLM operations ---
ai-ollama-pull-model:
	$(MAKE) -f Makefile.ai-llm ai-ollama-pull-model

ai-build-ollama-functions-service:
	$(MAKE) -f Makefile.ai-llm ai-build-ollama-functions-service

ai-run-ollama-functions-service:
	$(MAKE) -f Makefile.ai-llm ai-run-ollama-functions-service

ai-ollama-serve-docker-gateway:
	$(MAKE) -f Makefile.ai-llm ai-ollama-serve-docker-gateway

ai-ollama-logs:
	$(MAKE) -f Makefile.ai-llm ai-ollama-logs

ai-ollama-kill:
	$(MAKE) -f Makefile.ai-llm ai-ollama-kill

ai-ollama-restart-docker-gateway:
	$(MAKE) -f Makefile.ai-llm ai-ollama-restart-docker-gateway

ai-ollama-restart-docker-gateway-bg:
	$(MAKE) -f Makefile.ai-llm ai-ollama-restart-docker-gateway-bg

ai-build-ollama-functions:
	$(MAKE) -f Makefile.ai-llm ai-build-ollama-functions

ai-up-ollama-functions:
	$(MAKE) -f Makefile.ai-llm ai-up-ollama-functions

ai-restart-ollama-functions:
	$(MAKE) -f Makefile.ai-llm ai-restart-ollama-functions

ai-ollama-functions-health:
	$(MAKE) -f Makefile.ai-llm ai-ollama-functions-health

ai-ollama-functions-logs:
	$(MAKE) -f Makefile.ai-llm ai-ollama-functions-logs

ai-suggest-llm-rules:
	$(MAKE) -f Makefile.ai-llm ai-suggest-llm-rules

ai-suggest-llm-rules-docker:
	$(MAKE) -f Makefile.ai-llm ai-suggest-llm-rules-docker

ai-llm-setup:
	$(MAKE) -f Makefile.ai-llm ai-llm-setup

ai-scan-memory-nodes:
	$(MAKE) -f Makefile.ai-llm ai-scan-memory-nodes

ai-stop-ollama-functions:
	$(MAKE) -f Makefile.ai-llm ai-stop-ollama-functions

ai-down-ollama-functions:
	$(MAKE) -f Makefile.ai-llm ai-down-ollama-functions

# --- Meta-targets for Database Operations ---
ai-db-migrate:
	$(MAKE) -f Makefile.ai-db ai-db-migrate

ai-db-revision:
	$(MAKE) -f Makefile.ai-db ai-db-revision

ai-db-backup-full:
	$(MAKE) -f Makefile.ai-db ai-db-backup-full

ai-db-restore-full:
	$(MAKE) -f Makefile.ai-db ai-db-restore-full

ai-db-nuke-only:
	$(MAKE) -f Makefile.ai-db ai-db-nuke-only

ai-db-nuke-and-restore-data:
	$(MAKE) -f Makefile.ai-db ai-db-nuke-and-restore-data

ai-db-drop-recreate:
	$(MAKE) -f Makefile.ai-db ai-db-drop-recreate

ai-memorydb-backup:
	$(MAKE) -f Makefile.ai-db ai-memorydb-backup

ai-memorydb-restore:
	$(MAKE) -f Makefile.ai-db ai-memorydb-restore

# --- End of Meta-targets ---

# --- Meta-targets for Test Operations ---
ai-test:
	$(MAKE) -f Makefile.ai-test ai-test

ai-test-coverage:
	$(MAKE) -f Makefile.ai-test ai-test-coverage

# --- Meta-targets for Misc Operations ---
ai-export-rules:
	$(MAKE) -f Makefile.ai-misc ai-export-rules

ai-lint-rules:
	$(MAKE) -f Makefile.ai-misc ai-lint-rules

ai-propose-rule:
	$(MAKE) -f Makefile.ai-misc ai-propose-rule

ai-list-rules:
	$(MAKE) -f Makefile.ai-misc ai-list-rules

ai-safe-shutdown:
	$(MAKE) -f Makefile.ai-misc ai-safe-shutdown

ai-logs-help:
	$(MAKE) -f Makefile.ai-misc ai-logs-help

# --- End of Meta-targets ---
